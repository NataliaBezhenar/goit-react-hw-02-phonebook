{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleNameChange","e","setState","currentTarget","value","handleNumberChange","handleSubmit","preventDefault","props","onSubmit","reset","className","this","htmlFor","type","onChange","pattern","title","required","id","Component","ContactList","contacts","onDeleteContact","map","cont","onClick","Filter","App","filter","addContact","find","contact","alert","newContact","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ba3ae4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.currentTarget.value,\n    });\n  };\n\n  handleNumberChange = (e) => {\n    this.setState({\n      number: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"Phonebook\" onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameInputId}\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleNumberChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberInputId}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"ContactList\">\n    {contacts.map((cont) => (\n      <li className=\"ContactList__item\" key={cont.id}>\n        {cont.name}: {cont.number}\n        <button onClick={() => onDeleteContact(cont.id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import React from \"react\";\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name:{\" \"}\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(() => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts </h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}